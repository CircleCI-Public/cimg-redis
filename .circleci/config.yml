version: 2.1

orbs:
  sonar: hubci/sonar@1.0.0

workflows:
  main:
    jobs:
      - build:
          context: cimg-publishing

jobs:
  build:
    docker:
      - image: cimg/base:2022.01
    steps:
      - checkout
      - setup_remote_docker:
          version: "20.10.11"
      - run:
          name: "Build Docker Images"
          command: |
            ./build-images.sh
            docker images
            echo 'export DOCKER_PASS=$DOCKER_TOKEN' >> $BASH_ENV
      - run:
          name: "Install Test Prerequisites"
          command: |
            sudo apt-get update && \
            sudo apt-get install -y redis
      - run:
          name: "Test Docker Images"
          shell: /bin/bash -o pipefail
          command: |
            ssh -f -N -L localhost:6379:localhost:6379 remote-docker
            IMAGES=$(docker images --format='{{.Repository}}:{{.Tag}}' | grep "cimg/redis")
            for IMAGE in $IMAGES; do
              printf "Booting $IMAGE...\n"
              CONTAINER_ID=$(docker run --rm -p 6379:6379 -d $IMAGE)
              for i in {1..20}; do
                printf "[$i/20] Checking Redis is up...\n"
                redis-cli ping
                if [ $? -eq 0 ]; then
                  printf "Booted $IMAGE!\n"
                  break
                elif [ $? -ne 0 ] && [ $i -eq 20 ]; then
                  printf "Failed to boot image\n"
                  exit 1
                fi
                printf "[$i/20] No response. Sleeping 10s...\n"
                sleep 10s
              done
              printf "Running Version Check...\n"
              VERSION=$(echo $IMAGE | cut -d ":" -f2 | cut -d "-" -f1)
              if redis-cli INFO SERVER | grep $VERSION ; then
                printf "Version matches!\n"
              else
                printf "Version mismatch!\n"
                exit 1
              fi
              printf "Stopping $IMAGE...\n"
              docker stop $CONTAINER_ID >/dev/null 2>&1
            done
            printf "All images passed!\n"
      - deploy:
          name: "Publish Docker Images (main branch only)"
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              
              echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
              
              # an else block will be added in the future for a staging release
              if git log -1 --pretty=%s | grep "\[release\]"; then
                echo "Publishing cimg/redis to Docker Hub production."
                docker push cimg/redis
              else
                echo "Skipping publishing."
              fi
            fi
      - when:
          condition:
            equal: [main, << pipeline.git.branch >>]
          steps:
            - sonar/install:
                version: "0.15.0"
            - sonar/update-readme:
                image: cimg/redis
